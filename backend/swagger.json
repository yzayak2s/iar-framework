{
  "openapi": "3.0.3",
  "info": {
    "title": "Swagger HighPerformance - OpenAPI 3.0",
    "description": "This is a simple HighPerformance API based on the OpenAPI 3.0 specification.",
    "termsOfService": "http://swagger.io/terms/",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.11"
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  },
  "tags": [
    {
      "name": "salesmen"
    },
    {
      "name": "evaluationRecords"
    },
    {
      "name": "bonuses"
    },
    {
      "name": "openCRX"
    },
    {
      "name": "orangeHRM"
    }
  ],
  "servers": [
    {
      "url": "/you_touch_you_die/api"
    },
    {
      "url": "/api"
    }
  ],
  "paths": {
    "/salesmen/create": {
      "post": {
        "tags": [
          "salesmen"
        ],
        "summary": "Create a salesman",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesMan"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The salesman ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number",
                  "example": 5
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/salesmen/read/all": {
      "get": {
        "tags": [
          "salesmen"
        ],
        "summary": "Returns the list of all salesman",
        "responses": {
          "200": {
            "description": "The list of salesman",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesMan"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/salesmen/read/firstname/{firstname}": {
      "get": {
        "tags": [
          "salesmen"
        ],
        "summary": "returns salesman with firstname",
        "parameters": [
          {
            "in": "path",
            "name": "firstname",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "First name of salesman"
          }
        ],
        "responses": {
          "200": {
            "description": "The salesman",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesMan"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/salesmen/read/id/{_id}": {
      "get": {
        "tags": [
          "salesmen"
        ],
        "summary": "returns salesman by id",
        "parameters": [
          {
            "in": "path",
            "name": "_id",
            "schema": {
              "type": "number"
            },
            "required": true,
            "description": "id of salesman"
          }
        ],
        "responses": {
          "200": {
            "description": "The salesman",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesMan"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/salesmen/getApiSalesmen": {
      "get": {
        "tags":[
          "salesmen"
        ],
        "summary": "Get Salesman from OrangeHRM and add OpenCRx UID",
        "responses": {
          "200": {
            "description": "successfully updated database"
          }
        }
      }
    },
    "/salesmen/update/{_id}": {
      "put": {
        "tags": [
          "salesmen"
        ],
        "summary": "Update a salesman",
        "parameters": [
          {
            "in": "path",
            "name": "_id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successfully updated"
          }
        }
      }
    },
    "/salesmen/delete/id/{_id}": {
      "delete": {
        "tags": [
          "salesmen"
        ],
        "summary": "Delete a salesman by his id",
        "parameters": [
          {
            "in": "path",
            "name": "_id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "id of salesman"
          }
        ],
        "responses": {
          "200": {
            "description": "Count of deleted entries and more",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/salesmen/delete/all": {
      "delete": {
        "tags": [
          "salesmen"
        ],
        "summary": "Delete a salesman by his id",
        "responses": {
          "200": {
            "description": "Count of deleted entries and more",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/evaluationRecords/create": {
      "post": {
        "tags": [
          "evaluationRecords"
        ],
        "summary": "Create a Evaluation Record",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EvaluationRecord"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The Evaluation Record ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "63eaedd4f817986086761515"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/evaluationRecords/read/id/{_id}": {
      "get": {
        "tags": [
          "evaluationRecords"
        ],
        "summary": "returns evaluation Record by id",
        "parameters": [
          {
            "in": "path",
            "name": "_id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "id of evaluationRecord"
          }
        ],
        "responses": {
          "200": {
            "description": "The evaluation Record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EvaluationRecord"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/evaluationRecords/read/salesmanId/{salesManID}": {
      "get": {
        "tags": [
          "evaluationRecords"
        ],
        "summary": "returns evaluation Records by salesmanID",
        "parameters": [
          {
            "in": "path",
            "name": "salesManID",
            "schema": {
              "type": "number"
            },
            "required": true,
            "description": "ID of salesman" 
          }
        ],
        "responses": {
          "200": {
            "description": "Array of Evaluation Records",
            "content": {
              "application/json": {
                "schema": {
                  "type":"array",
                  "items":{
                    "$ref": "#/components/schemas/EvaluationRecord"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/evaluationRecords/read/all": {
      "get": {
        "tags": [
          "evaluationRecords"
        ],
        "summary": "returns all EvaluationRecords",
        "responses": {
          "200": {
            "description": "Array of Evaluation Records",
            "content": {
              "application/json": {
                "schema": {
                  "type":"array",
                  "items":{
                    "$ref": "#/components/schemas/EvaluationRecord"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/evaluationRecords/read/salesmanId/{salesManID}/{year}": {
      "get": {
        "tags": [
          "evaluationRecords"
        ],
        "summary": "Returns evaluation Records by salesmanID and year",
        "parameters": [
          {
            "in": "path",
            "name": "salesManID",
            "schema": {
              "type": "number"
            },
            "required": true,
            "description": "ID of salesman" 
          },
          {
            "in": "path",
            "name": "year",
            "schema": {
              "type": "number"
            },
            "required": true,
            "description": "year of the evaluation record"
          }
        ],
        "responses": {
          "200": {
            "description": "Array of Evaluation Records",
            "content": {
              "application/json": {
                "schema": {
                  "type":"array",
                  "items":{
                    "$ref": "#/components/schemas/EvaluationRecord"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/goals/read/all": {
      "get": {
        "tags": [
          "evaluationRecords"
        ],
        "summary": "returns all goals",
        "responses": {
          "200": {
            "description": "Array of goals",
            "content": {
              "application/json": {
                "schema": {
                  "type":"array",
                  "items":{
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "example": "63eaedd4f817986086761515"
                      },
                      "goal_description": {
                        "type": "string",
                        "example": "Leadership Competence"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/evaluationRecords/update/id/{_id}": {
      "put": {
        "tags": [
          "evaluationRecords"
        ],
        "summary": "Update a Evaluation Record",
        "parameters": [
          {
            "in": "path",
            "name": "_id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "id of evaluationRecord"
          }
        ],
        "requestBody": {
          "description": "New Evaluation Record to update to",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EvaluationRecord"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Count and more",
            "content": {
              "application/json": {
                "type": "object",
                "schema": {
                  "$ref": "#/components/schemas/UpdateResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/evaluationRecords/delete/id/{_id}": {
      "delete": {
        "tags": [
          "evaluationRecords"
        ],
        "summary": "Delete a evaluation record by id",
        "parameters": [
          {
            "in": "path",
            "name": "_id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "id of evaluationRecord"
          }
        ],
        "responses": {
          "200": {
            "description": "Count of deleted entries and more",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/evaluationRecords/delete/salesmanId/{salesManID}": {
      "delete": {
        "tags": [
          "evaluationRecords"
        ],
        "summary": "Delete all evaluation records of a salesman",
        "parameters": [
          {
            "in": "path",
            "name": "salesManID",
            "schema": {
              "type": "number"
            },
            "required": true,
            "description": "id of salesman"
          }
        ],
        "responses": {
          "200": {
            "description": "Count of deleted entries and more",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/bonuses/create": {
      "post": {
        "tags": [
          "bonuses"
        ],
        "summary": "Create a Bonus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Bonus"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The Bonus ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "63eaedd4f817986086761515"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/bonuses/read/all": {
      "get": {
        "tags": [
          "bonuses"
        ],
        "summary": "returns all bonuses",
        "responses": {
          "200": {
            "description": "Array of Bonus",
            "content": {
              "application/json": {
                "schema": {
                  "type":"array",
                  "items":{
                    "$ref": "#/components/schemas/Bonus"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/bonuses/read/id/{_id}": {
      "get": {
        "tags": [
          "bonuses"
        ],
        "summary": "returns bonus by id",
        "parameters": [
          {
            "in": "path",
            "name": "_id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "id of bonus"
          }
        ],
        "responses": {
          "200": {
            "description": "The Bonus",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bonus"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/bonuses/read/salesmanId/{salesManID}": {
      "get": {
        "tags": [
          "bonuses"
        ],
        "summary": "returns all bonuses of a salesman",
        "parameters": [
          {
            "in": "path",
            "name": "salesManID",
            "schema": {
              "type": "number"
            },
            "required": true,
            "description": "ID of salesman the bonuses belong to"
          }
        ],
        "responses": {
          "200": {
            "description": "The Bonus",
            "content": {
              "application/json": {
                "schema": {
                  "type":"array",
                  "items":{
                    "$ref": "#/components/schemas/Bonus"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/bonuses/updateRemark/id/{_id}": {
      "put": {
        "tags": [
          "bonuses"
        ],
        "summary": "Update the Remark of a Bonus",
        "parameters": [
          {
            "in": "path",
            "name": "_id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "id of bonus"
          }
        ],
        "requestBody": {
          "description": "New remark to update to",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              },
              "example": {
                "remark": "Very good!"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Count and more",
            "content": {
              "application/json": {
                "type": "object",
                "schema": {
                  "$ref": "#/components/schemas/UpdateResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/bonuses/updateStatus/id/{_id}": {
      "put": {
        "tags": [
          "bonuses"
        ],
        "summary": "Update the Status of a Bonus",
        "parameters": [
          {
            "in": "path",
            "name": "_id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "id of bonus"
          }
        ],
        "requestBody": {
          "description": "New Status to update to",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              },
              "example": {
                "status": "Approved"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Count and more",
            "content": {
              "application/json": {
                "type": "object",
                "schema": {
                  "$ref": "#/components/schemas/UpdateResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/bonuses/update/id/{_id}": {
      "put": {
        "tags": [
          "bonuses"
        ],
        "summary": "Update a Bonus",
        "parameters": [
          {
            "in": "path",
            "name": "_id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "id of bonus"
          }
        ],
        "requestBody": {
          "description": "New Bonus to update to",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Bonus"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Count and more",
            "content": {
              "application/json": {
                "type": "object",
                "schema": {
                  "$ref": "#/components/schemas/UpdateResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/bonuses/calculateBonus/sid/{salesManID}/{year}": {
      "get": {
        "tags": [
          "bonuses"
        ],
        "summary": "returns bonus of salesman of a year",
        "parameters": [
          {
            "in": "path",
            "name": "year",
            "required": true,
            "schema": {
              "type": "number",
              "example": 2020
            },
            "description": "Year to be calculated"
          },
          {
            "in": "path",
            "name": "salesManID",
            "schema": {
              "type": "number",
              "example": 9
            },
            "required": true,
            "description": "ID of salesman"
          }
        ],
        "responses": {
          "200": {
            "description": "Bonus calculation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref":"#/components/schemas/Bonus_calc"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/bonuses/calculateBonus/all/{year}": {
      "get": {
        "tags": [
          "bonuses"
        ],
        "summary": "returns bonus for all salesman of a year",
        "parameters": [
          {
            "in": "path",
            "name": "year",
            "required": true,
            "schema": {
              "type": "number",
              "example": 2020
            },
            "description": "Year to be calculated"
          }
        ],
        "responses": {
          "200": {
            "description": "Array of Bonus calculations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bonus_calc"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/bonusComputations/read/salesManID/{salesManID}/{year}": {
      "get": {
        "tags": [
          "bonuses"
        ],
        "summary": "Returns bonus calculation by salesmanID and year",
        "parameters": [
          {
            "in": "path",
            "name": "salesManID",
            "schema": {
              "type": "number"
            },
            "required": true,
            "description": "ID of salesman" 
          },
          {
            "in": "path",
            "name": "year",
            "schema": {
              "type": "number"
            },
            "required": true,
            "description": "year of the bonus calculation"
          }
        ],
        "responses": {
          "200": {
            "description": "Array of Bonus calculations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bonus_calc"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/bonuses/delete/id/{_id}": {
      "delete": {
        "tags": [
          "bonuses"
        ],
        "summary": "Delete a bonus by id",
        "parameters": [
          {
            "in": "path",
            "name": "_id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "id of bonus"
          }
        ],
        "responses": {
          "200": {
            "description": "Count of deleted entries and more",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/bonuses/delete/salesmanId/{salesManID}": {
        "delete": {
          "tags": [
            "bonuses"
          ],
          "summary": "Delete all bonuse of a salesman",
          "parameters": [
            {
              "in": "path",
              "name": "salesManID",
              "schema": {
                "type": "number"
              },
              "required": true,
              "description": "id of salesman"
            }
          ],
          "responses": {
            "200": {
              "description": "Count of deleted entries and more",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/DeleteResponse"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            }
          }
        }
    },
    "/accounts/read/all": {
      "get": {
        "tags": [
          "openCRX"
        ],
        "summary": "returns all accounts",
        "responses": {
          "200": {
            "description": "Array of accounts",
            "content": {
              "application/json": {
                "schema": {
                  "type":"array",
                  "items": {      
                    "type": "array",
                    "items": {
                      "allOf": [
                        {          
                          "type": "object",
                          "properties": {
                            "accountType": {
                              "type": "string",
                              "example": "LegalEntity"
                            },
                            "accountUID": {
                              "type": "string",
                              "example": "59NB4O91UERORTH2SA4T2TYKTS"
                            },
                            "fullName": {
                              "type": "string",
                              "example": "Company AG"
                            },
                            "accountRating": {
                              "type": "number",
                              "example": 1
                            },
                            "accessLevelBrowse": {
                              "type": "number",
                              "example": 3
                            },
                            "accountState": {
                              "type": "number",
                              "example": 1
                            }
                          }
                        },
                        {                             
                          "type": "object",
                          "properties": {
                            "accountType": {
                              "type": "string",
                              "example": "Contact"
                            },
                            "accountUID": {
                              "type": "string",
                              "example": "837BCDRCBESBTH2MA4T2JLNMS"
                            },
                            "firstName": {
                              "type": "string",
                              "example": "Bob"
                            },
                            "lastName": {
                              "type": "string",
                              "example": "Bobbington"
                            },
                            "governmentId": {
                              "type": "number",
                              "example": 90399
                            }
                          }                 
                        }
                      ]
                    }      
                  }  
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/accounts/read/uid/{uid}": {
        "get": {
          "tags": [
            "openCRX"
          ],
          "summary": "returns one accounts",
          "parameters": [
            {
              "in": "path",
              "name": "uid",
              "schema": {
                "type": "string"
              },
              "required": true,
              "description": "uid of account"
            }
          ],
          "responses": {
            "200": {
              "description": "the account",
              "content": {
                "application/json": {
                  "schema": {
                    "type":"object",
                    "properties": {      
                      "accountType": {
                        "type": "string",
                        "example": "LegalEntity"
                      },
                      "accountUID": {
                        "type": "string",
                        "example": "59NB4O91UERORTH2SA4T2TYKTS"
                      },
                      "fullName": {
                        "type": "string",
                        "example": "Company AG"
                      },
                      "accountRating": {
                        "type": "number",
                        "example": 1
                      },
                      "accessLevelBrowse": {
                        "type": "number",
                        "example": 3
                      },
                      "accountState": {
                        "type": "number",
                        "example": 1
                      }
                    }
                  }
                }      
              }  
            },
            "401": {
              "description": "Unauthorized"
            }
          }
      }
    },
    "/products/read/all": {
      "get": {
        "tags": [
          "openCRX"
        ],
        "summary": "returns all products",
        "responses": {
          "200": {
            "description": "array of products",
            "content": {
              "application/json": {
                "schema": {
                  "type":"array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "productType": {
                        "type": "string",
                        "example": "Product"
                      },
                      "productUID": {
                        "type": "string",
                        "example": "59NB4O91UERORTH2SA4T2TYKTS"
                      },
                      "productNumber": {
                        "type": "number",
                        "example": 100
                      },
                      "name": {
                        "type": "string",
                        "example": "Product thingy"
                      },
                      "description": {
                        "type": "string",
                        "example": "This product does something"
                      }
                    }
                  }
                }
              }      
            }  
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/products/read/uid/{uid}": {
      "get": {
        "tags": [
          "openCRX"
        ],
        "summary": "returns all products",
        "parameters": [
          {
            "in": "path",
            "name": "uid",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "uid of product"
          }
        ],
        "responses": {
          "200": {
            "description": "product",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "productType": {
                      "type": "string",
                      "example": "Product"
                    },
                    "productNumber": {
                      "type": "number",
                      "example": 100
                    },
                    "name": {
                      "type": "string",
                      "example": "Product thingy"
                    },
                    "description": {
                      "type": "string",
                      "example": "This product does something"
                    }
                  }
                }
              }      
            }  
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/salesOrders/read/all": {
      "get": {
        "tags": [
          "openCRX"
        ],
        "summary": "returns all sales Orders",
        "responses": {
          "200": {
            "description": "array of sales Orders",
            "content": {
              "application/json": {
                "schema": {
                  "type":"array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "contractType": {
                        "type": "string",
                        "example": "SalesOrder"
                      },
                      "salesOrderUID": {
                        "type": "string",
                        "example": "59NB4O91UERORTH2SA4T2TYKTS"
                      },
                      "customerUID": {
                        "type": "string",
                        "example": "837BCDRCBESBTH2MA4T2JLNMS"
                      },
                      "salesRep": {
                        "type": "string",
                        "example": "GESHRCBESBTH2MA4T2JLNMOS"
                      },
                      "createdAt": {
                        "type": "string",
                        "example": "2020"
                      },
                      "priority": {
                        "type": "number",
                        "example": 3
                      },
                      "contractNumber": {
                        "type": "string",
                        "example": "Contract_GMBH_2020"
                      },
                      "totalTaxAmount": {
                        "type": "string",
                        "example": "467.5000000"
                      },
                      "totalBaseAmount": {
                        "type": "string",
                        "example": "5500.0000000000"
                      },
                      "totalAmountIncludingTax": {
                        "type": "string",
                        "example": "5967.500000000"
                      }
                    }
                  }
                }
              }      
            }  
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/salesOrders/read/uid/{uid}": {
        "get": {
          "tags": [
            "openCRX"
          ],
          "summary": "returns one sales Order",
          "parameters": [
            {
              "in": "path",
              "name": "uid",
              "schema": {
                "type": "string"
              },
              "required": true,
              "description": "uid of sales Order"
            }
          ],
          "responses": {
            "200": {
              "description": "One sale Order",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "contractType": {
                        "type": "string",
                        "example": "SalesOrder"
                      },
                      "salesOrderUID": {
                        "type": "string",
                        "example": "59NB4O91UERORTH2SA4T2TYKTS"
                      },
                      "customerUID": {
                        "type": "string",
                        "example": "837BCDRCBESBTH2MA4T2JLNMS"
                      },
                      "salesRep": {
                        "type": "string",
                        "example": "GESHRCBESBTH2MA4T2JLNMOS"
                      },
                      "createdAt": {
                        "type": "string",
                        "example": "2020"
                      },
                      "priority": {
                        "type": "number",
                        "example": 3
                      },
                      "contractNumber": {
                        "type": "string",
                        "example": "Contract_GMBH_2020"
                      },
                      "totalTaxAmount": {
                        "type": "string",
                        "example": "467.5000000"
                      },
                      "totalBaseAmount": {
                        "type": "string",
                        "example": "5500.0000000000"
                      },
                      "totalAmountIncludingTax": {
                        "type": "string",
                        "example": "5967.500000000"
                      }
                    }
                  }
                }      
              }  
            },
            "401": {
              "description": "Unauthorized"
            }
          }
        }
    },
    "/salesOrders/{uid}/positions/read/all": {
      "get": {
        "tags": [
          "openCRX"
        ],
        "summary": "returns all positions of a sales order",
        "parameters": [
          {
            "in": "path",
            "name": "uid",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "uid of sales Order"
          }
        ],
        "responses": {
          "200": {
            "description": "array of positions",
            "content": {
              "application/json": {
                "schema": {
                  "type":"array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "contractType": {
                        "type": "string",
                        "example": "SalesOrderPosition"
                      },
                      "positionUID": {
                        "type": "string",
                        "example": "GEOAMSXR06DLHPM0EBHQAEG6GS7J"
                      },
                      "productUID": {
                        "type": "string",
                        "example": "GECGDHRER06DLHPM0HEHAFQAEG66S7J"
                      },
                      "quantity": {
                        "type": "string",
                        "example": "10.00000000"
                      },
                      "pricePerUnit": {
                        "type": "string",
                        "example": "250.0000000"
                      },
                      "amount": {
                        "type": "string",
                        "example": "2712.00000000"
                      }
                    }
                  }
                }
              }      
            }  
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/employees/read/all": {
      "get": {
        "tags": [
          "orangeHRM"
        ],
        "summary": "Returns the list of all employees",
        "responses": {
          "200": {
            "description": "The list of employees",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "firstName": {
                        "type": "string",
                        "example": "Max"
                      },
                      "middleName": {
                        "type": "string",
                        "example": "Bob"
                      },
                      "lastName": {
                        "type": "string",
                        "example": "Mustermann"
                      },
                      "code": {
                        "type": "string",
                        "example": "90032"
                      },
                      "employeeId": {
                        "type": "string",
                        "example": "7"
                      },
                      "fullName": {
                        "type": "string",
                        "example": "Max Bob Mustermann"
                      },
                      "status": {
                        "type": "string",
                        "example": null
                      },
                      "dob": {
                        "type": "string",
                        "example": null
                      },
                      "driversLicenseNumber": {
                        "type": "string",
                        "example": ""
                      },
                      "licenseExpiryDate": {
                        "type": "string",
                        "example": null
                      },
                      "maritalStatus": {
                        "type": "string",
                        "example": null
                      },
                      "gender": {
                        "type": "string",
                        "example": null
                      },
                      "otherId": {
                        "type": "string",
                        "example": ""
                      },
                      "nationality": {
                        "type": "string",
                        "example": null
                      },
                      "unit": {
                        "type": "string",
                        "example": "Sales"
                      },
                      "jobTitle": {
                        "type": "string",
                        "example": "Senior Salesman"
                      },
                      "supervisor": {
                        "type": "string",
                        "example": null
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/employees/read/id/{id}": {
      "get": {
        "tags": [
          "orangeHRM"
        ],
        "summary": "Returns a employee",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "id of employee"
          }
        ],
        "responses": {
          "200": {
            "description": "The employee",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "firstName": {
                      "type": "string",
                      "example": "Max"
                    },
                    "middleName": {
                      "type": "string",
                      "example": "Bob"
                    },
                    "lastName": {
                      "type": "string",
                      "example": "Mustermann"
                    },
                    "code": {
                      "type": "string",
                      "example": "90032"
                    },
                    "employeeId": {
                      "type": "string",
                      "example": "7"
                    },
                    "fullName": {
                      "type": "string",
                      "example": "Max Bob Mustermann"
                    },
                    "status": {
                      "type": "string",
                      "example": null
                    },
                    "dob": {
                      "type": "string",
                      "example": null
                    },
                    "driversLicenseNumber": {
                      "type": "string",
                      "example": ""
                    },
                    "licenseExpiryDate": {
                      "type": "string",
                      "example": null
                    },
                    "maritalStatus": {
                      "type": "string",
                      "example": null
                    },
                    "gender": {
                      "type": "string",
                      "example": null
                    },
                    "otherId": {
                      "type": "string",
                      "example": ""
                    },
                    "nationality": {
                      "type": "string",
                      "example": null
                    },
                    "unit": {
                      "type": "string",
                      "example": "Sales"
                    },
                    "jobTitle": {
                      "type": "string",
                      "example": "Senior Salesman"
                    },
                    "supervisor": {
                      "type": "string",
                      "example": null
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/employees/read/id/{id}/bonussalary": {
      "get": {
        "tags": [
          "orangeHRM"
        ],
        "summary": "Returns the bonus salaries of an employees",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "id of employee"
          }
        ],
        "responses": {
          "200": {
            "description": "The bonus salaries",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "year": {
                        "type": "string",
                        "example": "2020"
                      },
                      "value": {
                        "type": "string",
                        "example": "500"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/employees/create/bonussalary": {
      "post": {
        "tags": [
          "orangeHRM"
        ],
        "summary": "Post bonus to orangeHRM",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Bonus"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The bonus salary",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Successfully saved"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  }, 
  "components": {
    "schemas": {
      "SalesMan": {
        "type": "object",
        "required": [
          "_id",
          "uid",
          "firstname",
          "lastname",
          "middleName",
          "fullName",
          "unit",
          "jobTitle"
        ],
        "properties": {
          "_id": {
            "type": "integer",
            "description": "id of the salesman"
          },
          "uid": {
            "type": "integer",
            "description": "uid of the salesman"
          },
          "firstname": {
            "type": "string",
            "description": "The first name of the salesman"
          },
          "lastname": {
            "type": "string",
            "description": "The last name of the salesman"
          },
          "middleName": {
            "type": "string",
            "description": "The middle name of the salesman"
          },
          "fullName": {
            "type": "string",
            "description": "The full name of the salesman"
          },
          "unit": {
            "type": "string",
            "description": "The unit of the salesman"
          },
          "jobTitle": {
            "type": "string",
            "description": "The job title of the salesman"
          }
        },
        "example": {
          "_id": 5,
          "firstname": "Max",
          "lastname": "Mustermann",
          "middleName": "Muster",
          "fullName": "Max Mustermann",
          "unit": "Sales",
          "jobTitle": "Senior Salesman",
          "uid": "MAXMUSTERMANNUID"
        }
      },
      "EvaluationRecord": {
        "type": "object",
        "required": [
          "goalDescription",
          "targetValue",
          "actualValue",
          "year",
          "salesManID"
        ],
        "properties": {
          "goalDescription": {
            "type": "string",
            "description": "Description of our goal"
          },
          "targetValue": {
            "type": "integer",
            "description": "The amount of money we want our salesman to reach this year"
          },
          "actualValue": {
            "type": "string",
            "description": "The current amount of money our salesman has reached"
          },
          "year": {
            "type": "string",
            "description": "The year this Evaluation Record is from"
          },
          "salesManID": {
            "type": "integer",
            "description": "The id of the salesman this record belongs to"
          }
        },
        "example": {
          "goalDescription": "Make 2000€ of sales this year",
          "targetValue": 5,
          "actualValue": 4,
          "year": 2021,
          "salesManID": 5
        }
      },
      "Bonus": {
        "type": "object",
        "required": [
          "year",
          "value",
          "remark",
          "verified",
          "salesManID"
        ],
        "properties": {
          "year": {
            "type": "number",
            "description": "Year of the bonus"
          },
          "value": {
            "type": "number",
            "description": "amount of money for this bonus"
          },
          "remark": {
            "type": "string",
            "description": "remark of CEO"
          },
          "verified": {
            "type": "string",
            "description": "status of the verification"
          },
          "salesManID": {
            "type": "number",
            "description": "ID of salesman this bonus belongs to"
          }
        },
        "example": {
          "year": 2020,
          "value": 512.5,
          "remark": "Good one!",
          "verified": "pending",
          "salesManID": 9
        }
      },
      "Bonus_calc": {
        "type": "object",
        "properties": {
          "year": {
            "type": "number",
            "example": 2022
          },
          "salesManID": {
            "type": "number",
            "example": 9
          },
          "totalBonus": {
            "type": "number",
            "example": 466.53
          },
          "orderBonus": {
            "type": "object",
            "properties": {
              "total": {
                "type": "number",
                "example": 532.55
              },
              "salesOrders": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Company AG"
                    },
                    "rating": {
                      "type": "string",
                      "example": "excellent"
                    },
                    "itemsSold": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "Cleanbot 2000"
                          },
                          "amount": {
                            "type": "number",
                            "example": 5
                          },
                          "bonus": {
                            "type": "number",
                            "example": 400.25
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "perfBonus": {
            "type": "object",
            "properties": {
              "total": {
                "type": "number",
                "example": 150
              },
              "evalRecords": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "example": "63eaedd4f817986086761515"
                    },
                    "goalDescription": {
                      "type": "string",
                      "example": "Leadership Competence"
                    },
                    "targetValue": {
                      "type": "number",
                      "example": 5
                    },
                    "actualValue": {
                      "type": "number",
                      "example": 4
                    },
                    "year": {
                      "type": "number",
                      "example": 2022
                    },
                    "salesManID": {
                      "type": "number",
                      "example": 9
                    },
                    "bonus": {
                      "type": "number",
                      "example": 100
                    }
                  }
                }
              }
            }
          },
          "_id": {
            "type": "string",
            "example": "63eaedd4f817986086761515"
          }

        }
      },
      "UpdateResponse": {
        "type": "object",
        "properties": {
          "acknowledged": {
            "type": "boolean" 
          },
          "modifiedCount": {
            "type": "number",
            "example": 1
          },
          "upsertedId": {
            "type": "string",
            "example": null
          },
          "upsertedCount": {
            "type": "number"
          },
          "matchedCount": {
            "type": "number",
            "example": 1
          }
        }
      },
      "DeleteResponse": {
        "type": "object",
        "properties": {
          "acknowledged": {
            "type": "boolean"
          },
          "deletedCount": {
            "type": "number",
            "example": 1
          }
        }
      }
    }
  }
}